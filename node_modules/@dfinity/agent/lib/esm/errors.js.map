{"version":3,"file":"errors.js","sourceRoot":"","sources":["../../src/errors.ts"],"names":[],"mappings":"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","sourcesContent":["import { Principal } from '@dfinity/principal';\nimport {\n  QueryResponseRejected,\n  ReplicaRejectCode,\n  SubmitResponse,\n  v2ResponseBody,\n} from './agent/api';\nimport { RequestId } from './request_id';\nimport { toHex } from './utils/buffer';\n\n/**\n * An error that happens in the Agent. This is the root of all errors and should be used\n * everywhere in the Agent code (this package).\n * @todo https://github.com/dfinity/agent-js/issues/420\n */\nexport class AgentError extends Error {\n  public name = 'AgentError';\n  public __proto__ = AgentError.prototype;\n  constructor(public readonly message: string) {\n    super(message);\n    Object.setPrototypeOf(this, AgentError.prototype);\n  }\n}\n\nexport class ActorCallError extends AgentError {\n  public name = 'ActorCallError';\n  public __proto__ = ActorCallError.prototype;\n  constructor(\n    public readonly canisterId: Principal | string,\n    public readonly methodName: string,\n    public readonly type: 'query' | 'update',\n    public readonly props: Record<string, string>,\n  ) {\n    const cid = Principal.from(canisterId);\n    super(\n      [\n        `Call failed:`,\n        `  Canister: ${cid.toText()}`,\n        `  Method: ${methodName} (${type})`,\n        ...Object.getOwnPropertyNames(props).map(n => `  \"${n}\": ${JSON.stringify(props[n])}`),\n      ].join('\\n'),\n    );\n    Object.setPrototypeOf(this, ActorCallError.prototype);\n  }\n}\n\nexport class QueryCallRejectedError extends ActorCallError {\n  public name = 'QueryCallRejectedError';\n  public __proto__ = QueryCallRejectedError.prototype;\n  constructor(\n    canisterId: Principal | string,\n    methodName: string,\n    public readonly result: QueryResponseRejected,\n  ) {\n    const cid = Principal.from(canisterId);\n    super(cid, methodName, 'query', {\n      Status: result.status,\n      Code: ReplicaRejectCode[result.reject_code] ?? `Unknown Code \"${result.reject_code}\"`,\n      Message: result.reject_message,\n    });\n    Object.setPrototypeOf(this, QueryCallRejectedError.prototype);\n  }\n}\n\nexport class UpdateCallRejectedError extends ActorCallError {\n  public name = 'UpdateCallRejectedError';\n  public __proto__ = UpdateCallRejectedError.prototype;\n  constructor(\n    canisterId: Principal | string,\n    methodName: string,\n    public readonly requestId: RequestId,\n    public readonly response: SubmitResponse['response'],\n  ) {\n    const cid = Principal.from(canisterId);\n    super(cid, methodName, 'update', {\n      'Request ID': toHex(requestId),\n      ...(response.body\n        ? {\n            ...((response.body as v2ResponseBody).error_code\n              ? {\n                  'Error code': (response.body as v2ResponseBody).error_code,\n                }\n              : {}),\n            'Reject code': String((response.body as v2ResponseBody).reject_code),\n            'Reject message': (response.body as v2ResponseBody).reject_message,\n          }\n        : {\n            'HTTP status code': response.status.toString(),\n            'HTTP status text': response.statusText,\n          }),\n    });\n    Object.setPrototypeOf(this, UpdateCallRejectedError.prototype);\n  }\n}\n"]}