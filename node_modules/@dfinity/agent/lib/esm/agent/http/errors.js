import { AgentError } from '../../errors';
export class AgentHTTPResponseError extends AgentError {
    constructor(message, response) {
        super(message);
        this.response = response;
        this.name = this.constructor.name;
        Object.setPrototypeOf(this, new.target.prototype);
    }
}
export class AgentCallError extends AgentError {
    constructor(message, response, requestId, senderPubkey, senderSig, ingressExpiry) {
        super(message);
        this.response = response;
        this.requestId = requestId;
        this.senderPubkey = senderPubkey;
        this.senderSig = senderSig;
        this.ingressExpiry = ingressExpiry;
        this.name = 'AgentCallError';
        Object.setPrototypeOf(this, new.target.prototype);
    }
}
export class AgentQueryError extends AgentError {
    constructor(message, response, requestId, senderPubkey, senderSig, ingressExpiry) {
        super(message);
        this.response = response;
        this.requestId = requestId;
        this.senderPubkey = senderPubkey;
        this.senderSig = senderSig;
        this.ingressExpiry = ingressExpiry;
        this.name = 'AgentQueryError';
        Object.setPrototypeOf(this, new.target.prototype);
    }
}
export class AgentReadStateError extends AgentError {
    constructor(message, response, requestId, senderPubkey, senderSig, ingressExpiry) {
        super(message);
        this.response = response;
        this.requestId = requestId;
        this.senderPubkey = senderPubkey;
        this.senderSig = senderSig;
        this.ingressExpiry = ingressExpiry;
        this.name = 'AgentReadStateError';
        Object.setPrototypeOf(this, new.target.prototype);
    }
}
//# sourceMappingURL=errors.js.map