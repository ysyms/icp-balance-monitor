"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AgentReadStateError = exports.AgentQueryError = exports.AgentCallError = exports.AgentHTTPResponseError = void 0;
const errors_1 = require("../../errors");
class AgentHTTPResponseError extends errors_1.AgentError {
    constructor(message, response) {
        super(message);
        this.response = response;
        this.name = this.constructor.name;
        Object.setPrototypeOf(this, new.target.prototype);
    }
}
exports.AgentHTTPResponseError = AgentHTTPResponseError;
class AgentCallError extends errors_1.AgentError {
    constructor(message, response, requestId, senderPubkey, senderSig, ingressExpiry) {
        super(message);
        this.response = response;
        this.requestId = requestId;
        this.senderPubkey = senderPubkey;
        this.senderSig = senderSig;
        this.ingressExpiry = ingressExpiry;
        this.name = 'AgentCallError';
        Object.setPrototypeOf(this, new.target.prototype);
    }
}
exports.AgentCallError = AgentCallError;
class AgentQueryError extends errors_1.AgentError {
    constructor(message, response, requestId, senderPubkey, senderSig, ingressExpiry) {
        super(message);
        this.response = response;
        this.requestId = requestId;
        this.senderPubkey = senderPubkey;
        this.senderSig = senderSig;
        this.ingressExpiry = ingressExpiry;
        this.name = 'AgentQueryError';
        Object.setPrototypeOf(this, new.target.prototype);
    }
}
exports.AgentQueryError = AgentQueryError;
class AgentReadStateError extends errors_1.AgentError {
    constructor(message, response, requestId, senderPubkey, senderSig, ingressExpiry) {
        super(message);
        this.response = response;
        this.requestId = requestId;
        this.senderPubkey = senderPubkey;
        this.senderSig = senderSig;
        this.ingressExpiry = ingressExpiry;
        this.name = 'AgentReadStateError';
        Object.setPrototypeOf(this, new.target.prototype);
    }
}
exports.AgentReadStateError = AgentReadStateError;
//# sourceMappingURL=errors.js.map