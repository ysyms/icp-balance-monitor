import { AgentError } from '../../errors';
import { HttpDetailsResponse } from '../api';
export declare class AgentHTTPResponseError extends AgentError {
    readonly response: HttpDetailsResponse;
    constructor(message: string, response: HttpDetailsResponse);
}
export declare class AgentCallError extends AgentError {
    readonly response: HttpDetailsResponse;
    readonly requestId: string;
    readonly senderPubkey: string;
    readonly senderSig: string;
    readonly ingressExpiry: string;
    constructor(message: string, response: HttpDetailsResponse, requestId: string, senderPubkey: string, senderSig: string, ingressExpiry: string);
}
export declare class AgentQueryError extends AgentError {
    readonly response: HttpDetailsResponse;
    readonly requestId: string;
    readonly senderPubkey: string;
    readonly senderSig: string;
    readonly ingressExpiry: string;
    constructor(message: string, response: HttpDetailsResponse, requestId: string, senderPubkey: string, senderSig: string, ingressExpiry: string);
}
export declare class AgentReadStateError extends AgentError {
    readonly response: HttpDetailsResponse;
    readonly requestId: string;
    readonly senderPubkey: string;
    readonly senderSig: string;
    readonly ingressExpiry: string;
    constructor(message: string, response: HttpDetailsResponse, requestId: string, senderPubkey: string, senderSig: string, ingressExpiry: string);
}
